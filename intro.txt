web development and web programming mean the same thing.
 web apps are any web program, like a browser or wordpress or anything like that.

client vs server computers. 
 software is the only real difference. sewrver computers have server software to handle client requests and server responses known as the request/response cycle.
   server is the app that sends out responses

TLD == Top Level Domain 
 meaning the extension  
  .com .net .ca .pizza .jobs

WYSIWYG 
 I didnt know what this was once when i saw it in a job listing on indeed. but of course, i googled it right away. its a code editor that lets you see the changes or progress youre maing in real time. basically as if viewing it on a localhost or if you wrote some JS to make trhe browser refresh at a set interval.

wordpress
 a CMS
 i know theres two different branches of wordpress. one where you can make say, a blog or something, and one where you can actually build a site with themes and plugins and things. the latter is the big one that we will most likely be hearing about here.

 he covered both wordpress.com (the basic) and wordpress.org (self hosted)
 other CMS options are joomla and drupal, which i have heard of, but wasnt totally sure what they were.

Websites vs. Web apps
 web apps are just websites that are also apps. any website with a database is a web app. web apps will have content that changes (dynamic content). 

target=""
 in <a> tags, the target can be somethiong individual, like the name of the site youre sending them to. for instance, <a target="_google" href="http://www.google.com">Go to google in a new tab</a>

jpeg
 use jpeg for real life photos
 HD

png
 use png for immages that have solid lines like ilustrations or icons
 png (accordint to mischook) is the most advanced image format
 Also HD but not as good for photos
 best for transparency and grading/fading/blending
 Larger file size for photos

gif
 not HD
 tiny file size
 great for animations and small icons

<span>
 the span tag is an inline element whereas div is block Level

query string
 all additional information that gets passed into the url is called a query string.

<meta name=""
 the ones youll see on every web page are:
 charset, description, keywords, author, viewport
   There are many more you could add but theyre less common

CSS selector prioritization
 CSS doesnt just go with whatever declaration was set last, but will plaace more importance on an elements id styling.
 an elements individual id styling is prioritized over class or html selectors.

CSS specificity
 css selectors that are more specific will take precedence over less specific ones


CSS selectors
 p .italic vs p.italic
  if using p.italic, that means any paragraph element with class italic, but...
    p .italic
     this here means any element within a p tag that has a class of italic.
  so the space in between selectors means the first one is the parent and the second selector must be a child to that parent.

  there is also of course the comma seperating selectors which just means anything in this list must be styled like so.

Font Families with multiple words must have quotes around them.

CSS %
 if you set a tags height as a percentage, the containing tag must have its height  set in pixels. 

 AS IN:
 it will not just base that percentage off the page size or window size.

Link styling
 Love & Hate
 L  link
 V  visited
 H  hover
 A  active

background position
 instead of clockwise shorthand like other things, the properties are 
   horizontal then vertical

clear:
 clears this element past any  floated elements.
 so if you have an image floating in a page with text around it, the text will avoid or respect the image, but if you use clear on the text, it will get out of the way entirely, past any floated elements. so that theres no test near the picture at all.

position: static;
 anything with the default position of static, can not use top: bottom: left: or right: properties. only if position is fixed, relative, or absolute.
   he didnt cover position sticky

position: fixed;
 always adjusts its self according to the main viewport.

position: relative;
 always adjusts its self according to where it was to begin with.
   it will also scroll with the page.

position: absolute;
 an element that is positioned  absolutely, is adjusted according to the position of its nearest ancestor or parent that is not static. Usually its inside a tag that has its position set to relative, but fixed is also fine.

<main>
 internet explorer (although gone since windows 10)
 does not support the main tag, so for safetys sake, one should still use an aria role of main and display: block;

<nav>
 just like main, older browsers wont recognize them as tags of their own, so using display block and an aria role would be best practice

specificity
 remember the rule of specificity when doing media queries. specificity is prioritized over cascade order

background-attatchment: fixed;
 this creates the super cool window effect 

display: table or table-cell;
 simulates a tabular style layout without the confusion when it comes to accessibility

index.html
 i didnt know this till a couple months ago, but the home page needs to be named index.html. this will be the first page served up by the server. this is what the server will look for to serve as an appetizer, if you will.

cpanel
 cpanel is the control panel that stef showed and it looks so much more intuitive than say, aws.
   this is something i was also really curious about a while back, what is the interface for working with your rented server? well, now i know ... one common one at least.

w3schools
 I love this site, it's what i primarily used to learn to code. stef seems to be a strong advocate for them even though reddit says the name was tarnished from back in the day.
       Also apparently it's run by the w3c which really validates my preferance for it! :D

JS object groups
 stef had a great chart or illustration showing all the objects inside the classes of window, document, and globals.
   calling them object groups seemed odd to me, but i get what he's saying.
      html tags are document objects.
      data types are global objects. 
      and the document is part of the window object. as well as screen, navigator, history, and location.


parameters vs arguments
 stefan covered this today in js ch9 ... it was something that really confused me when i was first starting out, but he explained it very well, in plain english, noting that it can be confusing.


name= submit
 theres no good reason to use a name= on a submit button because youll never really need to work with the value of submit after its submitted something

.select()
 use .select() to get people to correct invalid form  data because it will highlight the incorrect input value.


phpinfo()
  this is a built in function for php that brings up a whole bunch fo info about php. or at least the version you have installed. its super helpful!

ini settings
 ; a semicolon before a line is a comment but only in the config files.
   turning on error messages is a smart thing to do to get messages like you would in the browser console when you have an error with js.
     php.ini 
     display_errors = on
     should be turned off once your app is publicly available though.
 actually, i just looked and the default value is on for this version.


php arrays
 php has indexed arrays, associative arrays, and m ultidimensional arrays.
   multidimensional arrays are just nested arrays
   and associative arrays are just name value pairs, using the => operator that i have in my php notes.


scandir()
 scan directory
   this function or "METHOD" as stef calls it, will scan a file directory and return an array of what it finds.

use echo to print the return value of a function


php sessions AKA cookies
 php sessions track who you are, so they know whos visiting the apps.
 this is the basis of shopping carts and video game scores and things where the content is different based on who you are. it's also the reason autofill works. this is referred to as maintaining the state.
      sessions are arrays and they are superglobals

session_start();
   this should be placed at the very top of the page. before doctype.
   this creates a tiny text file called a cookie which contains an associative array and also tags your web browser with an individual id, so it knows who you are.

http://localhost/phpmyadmin
  this is basically a control pannel for xampp

127.0.0.1 is another address for localhost





